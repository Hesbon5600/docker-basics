version: "3.1"
services:
  database:
    restart: always
    image: postgres:10.1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=backend
      - POSTGRES_DB=docker
    volumes:
      - ./docker_basics_db:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    expose:
      - "5433"
    networks:
      - back-end
  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - back-end
  app:
    restart: always
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
      # - "127.0.0.1:8000:8000"
    image: app-image
    volumes:
      - .:/docker-basics
    depends_on:
      - redis
      - database
    # entrypoint: ["/bin/bash", "-c", "/docker-basics/docker/start_api.sh"]
    stdin_open: true
    tty: true
    networks:
      - back-end
    environment:
      - CELERY_BROKER_URL=redis://redis
      - CELERY_RESULT_BACKEND=redis://redis
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=backend
      - POSTGRES_DB=docker
      - DB_HOST=database

  # celery:
  #   image: celery
  #   environment:
  #     - CELERY_BROKER_URL=redis://redis:6379/0
  #     - CELERY_RESULT_BACKEND=redis://redis:6379/0
  #   links:
  #     - redis
  #     - app
  #   networks:
  #     - back-end

  proxy:
    build:
      context: .
      dockerfile: nginx/nginx.Dockerfile
    image: nginx-custom
    ports:
      - "80:80"
    networks:
      - back-end
    depends_on:
      - app
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: always
networks:
  back-end:
